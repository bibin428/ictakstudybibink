# -*- coding: utf-8 -*-
"""submission.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KLdAdJS6knJ4_GA4llmcKcMyeAKj0-4f
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns


train = pd.read_csv('/content/train_LZdllcl.csv')
test = pd.read_csv("/content/test_2umaH9m.csv")
sample = pd.read_csv("/content/sample_submission_M0L0uXE.csv")

print("Train shape:", train.shape)
print("Test shape:", test.shape)

train.head()

# Check basic info
train.info()

# Summary of numeric columns
train.describe()

# Check missing values
print("\nMissing values in each column:\n")
print(train.isnull().sum())

# Fill missing values
train['education'].fillna('Unknown', inplace=True)
test['education'].fillna('Unknown', inplace=True)

train['previous_year_rating'].fillna(train['previous_year_rating'].median(), inplace=True)
test['previous_year_rating'].fillna(test['previous_year_rating'].median(), inplace=True)

from sklearn.preprocessing import LabelEncoder

categorical_cols = ['department', 'region', 'education', 'gender', 'recruitment_channel']
le = LabelEncoder()

for col in categorical_cols:
    train[col] = le.fit_transform(train[col])
    test[col] = le.transform(test[col])

X = train.drop(['employee_id', 'is_promoted'], axis=1)
y = train['is_promoted']

test_data = test.drop(['employee_id'], axis=1)
print("Train shape after preprocessing:", X.shape)
print("Test shape after preprocessing:", test_data.shape)

X.head()

from sklearn.model_selection import train_test_split

X_train, X_val, y_train, y_val = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y)
print("X_train shape:", X_train.shape)
print("X_val shape:", X_val.shape)
print("y_train shape:", y_train.shape)
print("y_val shape:", y_val.shape)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import f1_score

rf_model = RandomForestClassifier(random_state=42)
rf_model.fit(X_train, y_train)

y_pred = rf_model.predict(X_val)
print("F1 Score on validation:", f1_score(y_val, y_pred))

# Step 3a: Train on full train data
rf_model.fit(X, y)

# Step 3b: Predict on test data
test_pred = rf_model.predict(test_data)

# Step 3c: Prepare submission file
sample['is_promoted'] = test_pred
sample.to_csv("submission.csv", index=False)

print("Submission file created successfully!")

!ls

from google.colab import files
files.download("submission.csv")

sample = pd.read_csv("sample_submission_M0L0uXE.csv")
sample['is_promoted'] = test_pred
sample.to_csv("submission.csv", index=False)

